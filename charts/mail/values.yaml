replicaCount: 1

image:
  repository: containerum/mail
  tag: v1.0.0
  pullPolicy: IfNotPresent

service:
  port: 7070
  targetPort: 7070
  externalIP:

persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  ## If kuberntes version < 1.10 use volume.beta.kubernetes.io/storage-class:$store-class-name
  annotations: {}
  accessMode: ReadWriteOnce
  mountPath: "/storage"
  size: 5Gi

env:
  global:
    GIN_MODE: debug
    TEMPLATE_DB: "/storage/template.db"
    MESSAGES_DB: "/storage/messages.db"
    UPSTREAM: "smtp"
    UPSTREAM_SIMPLE: "smtp"
    SENDER_NAME_SIMPLE: "containerum"
    SENDER_MAIL_SIMPLE: "noreply-test@containerum.io"
    SENDER_NAME: "containerum"
    SENDER_MAIL: "noreply-test@containerum.io"
    LISTEN_ADDR: ":7070"
    SMTP_ADDR: "mail:465"
    SMTP_LOGIN: "noreply-test@containerum.io"
  local:
    USER_MANAGER_URL: http://user-manager:8111
    SMTP_PASSWORD: verystrongpassword
    MG_PASSWORD:
