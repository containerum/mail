[{
		"subject": "Account activated - Containerum",
		"name": "activate_acc",
		"version": "v1.0",
		"data": ""
	},
	{
		"subject": "Confirm your email - Containerum",
		"name": "confirm_reg",
		"version": "v1.0",
		"data": ""
	},
	{
		"subject": "Account was deleted - Containerum",
		"name": "delete_acc",
		"version": "v1.0",
		"data": ""
	},
	{
		"subject": "Password was successfully changed - Containerum",
		"name": "pwd_changed",
		"version": "v1.0",
		"data": ""
	},
	{
		"subject": "Reset password - Containerum",
		"name": "reset_pwd",
		"version": "v1.0",
		"data": "PCFkb2N0eXBlIGh0bWw+CjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIiB4bWxuczp2PSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOnZtbCIgeG1sbnM6bz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTpvZmZpY2U6b2ZmaWNlIj4KCTxoZWFkPgoJCTwhLS0gTkFNRTogU0VMTCBQUk9EVUNUUyAtLT4KCQk8IS0tW2lmIGd0ZSBtc28gMTVdPgoJCTx4bWw+CgkJCTxvOk9mZmljZURvY3VtZW50U2V0dGluZ3M+CgkJCTxvOkFsbG93UE5HLz4KCQkJPG86UGl4ZWxzUGVySW5jaD45NjwvbzpQaXhlbHNQZXJJbmNoPgoJCQk8L286T2ZmaWNlRG9jdW1lbnRTZXR0aW5ncz4KCQk8L3htbD4KCQk8IVtlbmRpZl0tLT4KCQk8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICAgICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KICAgICAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEiPgoJCTx0aXRsZT5SZXNldCBQYXNzd29yZCAtIENvbnRhaW5lcnVtPC90aXRsZT4KCiAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJCXB7CgkJCW1hcmdpbjoxMHB4IDA7CgkJCXBhZGRpbmc6MDsKCQl9CgkJdGFibGV7CgkJCWJvcmRlci1jb2xsYXBzZTpjb2xsYXBzZTsKCQl9CgkJaDEsaDIsaDMsaDQsaDUsaDZ7CgkJCWRpc3BsYXk6YmxvY2s7CgkJCW1hcmdpbjowOwoJCQlwYWRkaW5nOjA7CgkJfQoJCWltZyxhIGltZ3sKCQkJYm9yZGVyOjA7CgkJCWhlaWdodDphdXRvOwoJCQlvdXRsaW5lOm5vbmU7CgkJCXRleHQtZGVjb3JhdGlvbjpub25lOwoJCX0KCQlib2R5LCNib2R5VGFibGUsI2JvZHlDZWxsewoJCQloZWlnaHQ6MTAwJTsKCQkJbWFyZ2luOjA7CgkJCXBhZGRpbmc6MDsKCQkJd2lkdGg6MTAwJTsKCQl9CgkJLm1jblByZXZpZXdUZXh0ewoJCQlkaXNwbGF5Om5vbmUgIWltcG9ydGFudDsKCQl9CgkJI291dGxvb2sgYXsKCQkJcGFkZGluZzowOwoJCX0KCQlpbWd7CgkJCS1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6YmljdWJpYzsKCQl9CgkJdGFibGV7CgkJCW1zby10YWJsZS1sc3BhY2U6MHB0OwoJCQltc28tdGFibGUtcnNwYWNlOjBwdDsKCQl9CgkJLlJlYWRNc2dCb2R5ewoJCQl3aWR0aDoxMDAlOwoJCX0KCQkuRXh0ZXJuYWxDbGFzc3sKCQkJd2lkdGg6MTAwJTsKCQl9CgkJcCxhLGxpLHRkLGJsb2NrcXVvdGV7CgkJCW1zby1saW5lLWhlaWdodC1ydWxlOmV4YWN0bHk7CgkJfQoJCWFbaHJlZl49dGVsXSxhW2hyZWZePXNtc117CgkJCWNvbG9yOmluaGVyaXQ7CgkJCWN1cnNvcjpkZWZhdWx0OwoJCQl0ZXh0LWRlY29yYXRpb246bm9uZTsKCQl9CgkJcCxhLGxpLHRkLGJvZHksdGFibGUsYmxvY2txdW90ZXsKCQkJLW1zLXRleHQtc2l6ZS1hZGp1c3Q6MTAwJTsKCQkJLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OjEwMCU7CgkJfQoJCS5FeHRlcm5hbENsYXNzLC5FeHRlcm5hbENsYXNzIHAsLkV4dGVybmFsQ2xhc3MgdGQsLkV4dGVybmFsQ2xhc3MgZGl2LC5FeHRlcm5hbENsYXNzIHNwYW4sLkV4dGVybmFsQ2xhc3MgZm9udHsKCQkJbGluZS1oZWlnaHQ6MTAwJTsKCQl9CgkJYVt4LWFwcGxlLWRhdGEtZGV0ZWN0b3JzXXsKCQkJY29sb3I6aW5oZXJpdCAhaW1wb3J0YW50OwoJCQl0ZXh0LWRlY29yYXRpb246bm9uZSAhaW1wb3J0YW50OwoJCQlmb250LXNpemU6aW5oZXJpdCAhaW1wb3J0YW50OwoJCQlmb250LWZhbWlseTppbmhlcml0ICFpbXBvcnRhbnQ7CgkJCWZvbnQtd2VpZ2h0OmluaGVyaXQgIWltcG9ydGFudDsKCQkJbGluZS1oZWlnaHQ6aW5oZXJpdCAhaW1wb3J0YW50OwoJCX0KCQkudGVtcGxhdGVDb250YWluZXJ7CgkJCW1heC13aWR0aDo2MDBweCAhaW1wb3J0YW50OwoJCX0KCQlhLm1jbkJ1dHRvbnsKCQkJZGlzcGxheTpibG9jazsKCQl9CgkJLm1jbkltYWdlLC5tY25SZXRpbmFJbWFnZXsKCQkJdmVydGljYWwtYWxpZ246Ym90dG9tOwoJCX0KCQkubWNuVGV4dENvbnRlbnR7CgkJCXdvcmQtYnJlYWs6YnJlYWstd29yZDsKCQl9CgkJLm1jblRleHRDb250ZW50IGltZ3sKCQkJaGVpZ2h0OmF1dG8gIWltcG9ydGFudDsKCQl9CgkJLm1jbkRpdmlkZXJCbG9ja3sKCQkJdGFibGUtbGF5b3V0OmZpeGVkICFpbXBvcnRhbnQ7CgkJfQoJLyoKCUB0YWIgUGFnZQoJQHNlY3Rpb24gSGVhZGluZyAxCglAc3R5bGUgaGVhZGluZyAxCgkqLwoJCWgxewoJCQkvKkBlZGl0YWJsZSovY29sb3I6IzIyMjIyMjsKCQkJLypAZWRpdGFibGUqL2ZvbnQtZmFtaWx5OkhlbHZldGljYTsKCQkJLypAZWRpdGFibGUqL2ZvbnQtc2l6ZTo0MHB4OwoJCQkvKkBlZGl0YWJsZSovZm9udC1zdHlsZTpub3JtYWw7CgkJCS8qQGVkaXRhYmxlKi9mb250LXdlaWdodDpib2xkOwoJCQkvKkBlZGl0YWJsZSovbGluZS1oZWlnaHQ6MTUwJTsKCQkJLypAZWRpdGFibGUqL2xldHRlci1zcGFjaW5nOm5vcm1hbDsKCQkJLypAZWRpdGFibGUqL3RleHQtYWxpZ246Y2VudGVyOwoJCX0KCS8qCglAdGFiIFBhZ2UKCUBzZWN0aW9uIEhlYWRpbmcgMgoJQHN0eWxlIGhlYWRpbmcgMgoJKi8KCQloMnsKCQkJLypAZWRpdGFibGUqL2NvbG9yOiMyMjIyMjI7CgkJCS8qQGVkaXRhYmxlKi9mb250LWZhbWlseTpIZWx2ZXRpY2E7CgkJCS8qQGVkaXRhYmxlKi9mb250LXNpemU6MzRweDsKCQkJLypAZWRpdGFibGUqL2ZvbnQtc3R5bGU6bm9ybWFsOwoJCQkvKkBlZGl0YWJsZSovZm9udC13ZWlnaHQ6Ym9sZDsKCQkJLypAZWRpdGFibGUqL2xpbmUtaGVpZ2h0OjE1MCU7CgkJCS8qQGVkaXRhYmxlKi9sZXR0ZXItc3BhY2luZzpub3JtYWw7CgkJCS8qQGVkaXRhYmxlKi90ZXh0LWFsaWduOmxlZnQ7CgkJfQoJLyoKCUB0YWIgUGFnZQoJQHNlY3Rpb24gSGVhZGluZyAzCglAc3R5bGUgaGVhZGluZyAzCgkqLwoJCWgzewoJCQkvKkBlZGl0YWJsZSovY29sb3I6IzQ0NDQ0NDsKCQkJLypAZWRpdGFibGUqL2ZvbnQtZmFtaWx5OkhlbHZldGljYTsKCQkJLypAZWRpdGFibGUqL2ZvbnQtc2l6ZToyMnB4OwoJCQkvKkBlZGl0YWJsZSovZm9udC1zdHlsZTpub3JtYWw7CgkJCS8qQGVkaXRhYmxlKi9mb250LXdlaWdodDpib2xkOwoJCQkvKkBlZGl0YWJsZSovbGluZS1oZWlnaHQ6MTUwJTsKCQkJLypAZWRpdGFibGUqL2xldHRlci1zcGFjaW5nOm5vcm1hbDsKCQkJLypAZWRpdGFibGUqL3RleHQtYWxpZ246bGVmdDsKCQl9CgkvKgoJQHRhYiBQYWdlCglAc2VjdGlvbiBIZWFkaW5nIDQKCUBzdHlsZSBoZWFkaW5nIDQKCSovCgkJaDR7CgkJCS8qQGVkaXRhYmxlKi9jb2xvcjojOTk5OTk5OwoJCQkvKkBlZGl0YWJsZSovZm9udC1mYW1pbHk6R2VvcmdpYTsKCQkJLypAZWRpdGFibGUqL2ZvbnQtc2l6ZToyMHB4OwoJCQkvKkBlZGl0YWJsZSovZm9udC1zdHlsZTppdGFsaWM7CgkJCS8qQGVkaXRhYmxlKi9mb250LXdlaWdodDpub3JtYWw7CgkJCS8qQGVkaXRhYmxlKi9saW5lLWhlaWdodDoxMjUlOwoJCQkvKkBlZGl0YWJsZSovbGV0dGVyLXNwYWNpbmc6bm9ybWFsOwoJCQkvKkBlZGl0YWJsZSovdGV4dC1hbGlnbjpsZWZ0OwoJCX0KCS8qCglAdGFiIEhlYWRlcgoJQHNlY3Rpb24gSGVhZGVyIENvbnRhaW5lciBTdHlsZQoJKi8KCQkjdGVtcGxhdGVIZWFkZXJ7CgkJCS8qQGVkaXRhYmxlKi9iYWNrZ3JvdW5kLWNvbG9yOiNmZmZmZmY7CgkJCS8qQGVkaXRhYmxlKi9iYWNrZ3JvdW5kLWltYWdlOm5vbmU7CgkJCS8qQGVkaXRhYmxlKi9iYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7CgkJCS8qQGVkaXRhYmxlKi9iYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlcjsKCQkJLypAZWRpdGFibGUqL2JhY2tncm91bmQtc2l6ZTpjb3ZlcjsKCQkJLypAZWRpdGFibGUqL2JvcmRlci10b3A6MDsKCQkJLypAZWRpdGFibGUqL2JvcmRlci1ib3R0b206MDsKCQkJLypAZWRpdGFibGUqL3BhZGRpbmctdG9wOjBweDsKCQkJLypAZWRpdGFibGUqL3BhZGRpbmctYm90dG9tOjBweDsKCQl9CgkvKgoJQHRhYiBIZWFkZXIKCUBzZWN0aW9uIEhlYWRlciBJbnRlcmlvciBTdHlsZQoJKi8KCQkuaGVhZGVyQ29udGFpbmVyewoJCQkvKkBlZGl0YWJsZSovYmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDsKCQkJLypAZWRpdGFibGUqL2JhY2tncm91bmQtaW1hZ2U6bm9uZTsKCQkJLypAZWRpdGFibGUqL2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDsKCQkJLypAZWRpdGFibGUqL2JhY2tncm91bmQtcG9zaXRpb246Y2VudGVyOwoJCQkvKkBlZGl0YWJsZSovYmFja2dyb3VuZC1zaXplOmNvdmVyOwoJCQkvKkBlZGl0YWJsZSovYm9yZGVyLXRvcDowOwoJCQkvKkBlZGl0YWJsZSovYm9yZGVyLWJvdHRvbTowOwoJCQkvKkBlZGl0YWJsZSovcGFkZGluZy10b3A6MDsKCQkJLypAZWRpdGFibGUqL3BhZGRpbmctYm90dG9tOjA7CgkJfQoJLyoKCUB0YWIgSGVhZGVyCglAc2VjdGlvbiBIZWFkZXIgVGV4dAoJKi8KCQkuaGVhZGVyQ29udGFpbmVyIC5tY25UZXh0Q29udGVudCwuaGVhZGVyQ29udGFpbmVyIC5tY25UZXh0Q29udGVudCBwewoJCQkvKkBlZGl0YWJsZSovY29sb3I6IzgwODA4MDsKCQkJLypAZWRpdGFibGUqL2ZvbnQtZmFtaWx5OkhlbHZldGljYTsKCQkJLypAZWRpdGFibGUqL2ZvbnQtc2l6ZToxNnB4OwoJCQkvKkBlZGl0YWJsZSovbGluZS1oZWlnaHQ6MTUwJTsKCQkJLypAZWRpdGFibGUqL3RleHQtYWxpZ246bGVmdDsKCQl9CgkvKgoJQHRhYiBIZWFkZXIKCUBzZWN0aW9uIEhlYWRlciBMaW5rCgkqLwoJCS5oZWFkZXJDb250YWluZXIgLm1jblRleHRDb250ZW50IGEsLmhlYWRlckNvbnRhaW5lciAubWNuVGV4dENvbnRlbnQgcCBhewoJCQkvKkBlZGl0YWJsZSovY29sb3I6IzAwQUREODsKCQkJLypAZWRpdGFibGUqL2ZvbnQtd2VpZ2h0Om5vcm1hbDsKCQkJLypAZWRpdGFibGUqL3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7CgkJfQoJLyoKCUB0YWIgQm9keQoJQHNlY3Rpb24gQm9keSBDb250YWluZXIgU3R5bGUKCSovCgkJI3RlbXBsYXRlQm9keXsKCQkJLypAZWRpdGFibGUqL2JhY2tncm91bmQtY29sb3I6I0ZGRkZGRjsKCQkJLypAZWRpdGFibGUqL2JhY2tncm91bmQtaW1hZ2U6bm9uZTsKCQkJLypAZWRpdGFibGUqL2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDsKCQkJLypAZWRpdGFibGUqL2JhY2tncm91bmQtcG9zaXRpb246Y2VudGVyOwoJCQkvKkBlZGl0YWJsZSovYmFja2dyb3VuZC1zaXplOmNvdmVyOwoJCQkvKkBlZGl0YWJsZSovYm9yZGVyLXRvcDowOwoJCQkvKkBlZGl0YWJsZSovYm9yZGVyLWJvdHRvbTowOwoJCQkvKkBlZGl0YWJsZSovcGFkZGluZy10b3A6MHB4OwoJCQkvKkBlZGl0YWJsZSovcGFkZGluZy1ib3R0b206MHB4OwoJCX0KCS8qCglAdGFiIEJvZHkKCUBzZWN0aW9uIEJvZHkgSW50ZXJpb3IgU3R5bGUKCSovCgkJLmJvZHlDb250YWluZXJ7CgkJCS8qQGVkaXRhYmxlKi9iYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50OwoJCQkvKkBlZGl0YWJsZSovYmFja2dyb3VuZC1pbWFnZTpub25lOwoJCQkvKkBlZGl0YWJsZSovYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0OwoJCQkvKkBlZGl0YWJsZSovYmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXI7CgkJCS8qQGVkaXRhYmxlKi9iYWNrZ3JvdW5kLXNpemU6Y292ZXI7CgkJCS8qQGVkaXRhYmxlKi9ib3JkZXItdG9wOjA7CgkJCS8qQGVkaXRhYmxlKi9ib3JkZXItYm90dG9tOjA7CgkJCS8qQGVkaXRhYmxlKi9wYWRkaW5nLXRvcDowOwoJCQkvKkBlZGl0YWJsZSovcGFkZGluZy1ib3R0b206MDsKCQl9CgkvKgoJQHRhYiBCb2R5CglAc2VjdGlvbiBCb2R5IFRleHQKCSovCgkJLmJvZHlDb250YWluZXIgLm1jblRleHRDb250ZW50LC5ib2R5Q29udGFpbmVyIC5tY25UZXh0Q29udGVudCBwewoJCQkvKkBlZGl0YWJsZSovY29sb3I6IzgwODA4MDsKCQkJLypAZWRpdGFibGUqL2ZvbnQtZmFtaWx5OkhlbHZldGljYTsKCQkJLypAZWRpdGFibGUqL2ZvbnQtc2l6ZToxNnB4OwoJCQkvKkBlZGl0YWJsZSovbGluZS1oZWlnaHQ6MTUwJTsKCQkJLypAZWRpdGFibGUqL3RleHQtYWxpZ246bGVmdDsKCQl9CgkvKgoJQHRhYiBCb2R5CglAc2VjdGlvbiBCb2R5IExpbmsKCSovCgkJLmJvZHlDb250YWluZXIgLm1jblRleHRDb250ZW50IGEsLmJvZHlDb250YWluZXIgLm1jblRleHRDb250ZW50IHAgYXsKCQkJLypAZWRpdGFibGUqL2NvbG9yOiMwMEFERDg7CgkJCS8qQGVkaXRhYmxlKi9mb250LXdlaWdodDpub3JtYWw7CgkJCS8qQGVkaXRhYmxlKi90ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lOwoJCX0KCS8qCglAdGFiIEZvb3RlcgoJQHNlY3Rpb24gRm9vdGVyIFN0eWxlCgkqLwoJCSN0ZW1wbGF0ZUZvb3RlcnsKCQkJLypAZWRpdGFibGUqL2JhY2tncm91bmQtY29sb3I6IzMzMzMzMzsKCQkJLypAZWRpdGFibGUqL2JhY2tncm91bmQtaW1hZ2U6bm9uZTsKCQkJLypAZWRpdGFibGUqL2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDsKCQkJLypAZWRpdGFibGUqL2JhY2tncm91bmQtcG9zaXRpb246Y2VudGVyOwoJCQkvKkBlZGl0YWJsZSovYmFja2dyb3VuZC1zaXplOmNvdmVyOwoJCQkvKkBlZGl0YWJsZSovYm9yZGVyLXRvcDowOwoJCQkvKkBlZGl0YWJsZSovYm9yZGVyLWJvdHRvbTowOwoJCQkvKkBlZGl0YWJsZSovcGFkZGluZy10b3A6MHB4OwoJCQkvKkBlZGl0YWJsZSovcGFkZGluZy1ib3R0b206MHB4OwoJCX0KCS8qCglAdGFiIEZvb3RlcgoJQHNlY3Rpb24gRm9vdGVyIEludGVyaW9yIFN0eWxlCgkqLwoJCS5mb290ZXJDb250YWluZXJ7CgkJCS8qQGVkaXRhYmxlKi9iYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50OwoJCQkvKkBlZGl0YWJsZSovYmFja2dyb3VuZC1pbWFnZTpub25lOwoJCQkvKkBlZGl0YWJsZSovYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0OwoJCQkvKkBlZGl0YWJsZSovYmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXI7CgkJCS8qQGVkaXRhYmxlKi9iYWNrZ3JvdW5kLXNpemU6Y292ZXI7CgkJCS8qQGVkaXRhYmxlKi9ib3JkZXItdG9wOjA7CgkJCS8qQGVkaXRhYmxlKi9ib3JkZXItYm90dG9tOjA7CgkJCS8qQGVkaXRhYmxlKi9wYWRkaW5nLXRvcDowOwoJCQkvKkBlZGl0YWJsZSovcGFkZGluZy1ib3R0b206MDsKCQl9CgkvKgoJQHRhYiBGb290ZXIKCUBzZWN0aW9uIEZvb3RlciBUZXh0CgkqLwoJCS5mb290ZXJDb250YWluZXIgLm1jblRleHRDb250ZW50LC5mb290ZXJDb250YWluZXIgLm1jblRleHRDb250ZW50IHB7CgkJCS8qQGVkaXRhYmxlKi9jb2xvcjojRkZGRkZGOwoJCQkvKkBlZGl0YWJsZSovZm9udC1mYW1pbHk6SGVsdmV0aWNhOwoJCQkvKkBlZGl0YWJsZSovZm9udC1zaXplOjEycHg7CgkJCS8qQGVkaXRhYmxlKi9saW5lLWhlaWdodDoxNTAlOwoJCQkvKkBlZGl0YWJsZSovdGV4dC1hbGlnbjpjZW50ZXI7CgkJfQoJLyoKCUB0YWIgRm9vdGVyCglAc2VjdGlvbiBGb290ZXIgTGluawoJKi8KCQkuZm9vdGVyQ29udGFpbmVyIC5tY25UZXh0Q29udGVudCBhLC5mb290ZXJDb250YWluZXIgLm1jblRleHRDb250ZW50IHAgYXsKCQkJLypAZWRpdGFibGUqL2NvbG9yOiNGRkZGRkY7CgkJCS8qQGVkaXRhYmxlKi9mb250LXdlaWdodDpub3JtYWw7CgkJCS8qQGVkaXRhYmxlKi90ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lOwoJCX0KCUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDo3NjhweCl7CgkJLnRlbXBsYXRlQ29udGFpbmVyewoJCQl3aWR0aDo2MDBweCAhaW1wb3J0YW50OwoJCX0KCn0JQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCl7CgkJYm9keSx0YWJsZSx0ZCxwLGEsbGksYmxvY2txdW90ZXsKCQkJLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0Om5vbmUgIWltcG9ydGFudDsKCQl9Cgp9CUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpewoJCWJvZHl7CgkJCXdpZHRoOjEwMCUgIWltcG9ydGFudDsKCQkJbWluLXdpZHRoOjEwMCUgIWltcG9ydGFudDsKCQl9Cgp9CUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpewoJCS5tY25SZXRpbmFJbWFnZXsKCQkJbWF4LXdpZHRoOjEwMCUgIWltcG9ydGFudDsKCQl9Cgp9CUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpewoJCS5tY25JbWFnZXsKCQkJd2lkdGg6MTAwJSAhaW1wb3J0YW50OwoJCX0KCn0JQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCl7CgkJLm1jbkNhcnRDb250YWluZXIsLm1jbkNhcHRpb25Ub3BDb250ZW50LC5tY25SZWNDb250ZW50Q29udGFpbmVyLC5tY25DYXB0aW9uQm90dG9tQ29udGVudCwubWNuVGV4dENvbnRlbnRDb250YWluZXIsLm1jbkJveGVkVGV4dENvbnRlbnRDb250YWluZXIsLm1jbkltYWdlR3JvdXBDb250ZW50Q29udGFpbmVyLC5tY25DYXB0aW9uTGVmdFRleHRDb250ZW50Q29udGFpbmVyLC5tY25DYXB0aW9uUmlnaHRUZXh0Q29udGVudENvbnRhaW5lciwubWNuQ2FwdGlvbkxlZnRJbWFnZUNvbnRlbnRDb250YWluZXIsLm1jbkNhcHRpb25SaWdodEltYWdlQ29udGVudENvbnRhaW5lciwubWNuSW1hZ2VDYXJkTGVmdFRleHRDb250ZW50Q29udGFpbmVyLC5tY25JbWFnZUNhcmRSaWdodFRleHRDb250ZW50Q29udGFpbmVyLC5tY25JbWFnZUNhcmRMZWZ0SW1hZ2VDb250ZW50Q29udGFpbmVyLC5tY25JbWFnZUNhcmRSaWdodEltYWdlQ29udGVudENvbnRhaW5lcnsKCQkJbWF4LXdpZHRoOjEwMCUgIWltcG9ydGFudDsKCQkJd2lkdGg6MTAwJSAhaW1wb3J0YW50OwoJCX0KCn0JQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCl7CgkJLm1jbkJveGVkVGV4dENvbnRlbnRDb250YWluZXJ7CgkJCW1pbi13aWR0aDoxMDAlICFpbXBvcnRhbnQ7CgkJfQoKfQlAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KXsKCQkubWNuSW1hZ2VHcm91cENvbnRlbnR7CgkJCXBhZGRpbmc6OXB4ICFpbXBvcnRhbnQ7CgkJfQoKfQlAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KXsKCQkubWNuQ2FwdGlvbkxlZnRDb250ZW50T3V0ZXIgLm1jblRleHRDb250ZW50LC5tY25DYXB0aW9uUmlnaHRDb250ZW50T3V0ZXIgLm1jblRleHRDb250ZW50ewoJCQlwYWRkaW5nLXRvcDo5cHggIWltcG9ydGFudDsKCQl9Cgp9CUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpewoJCS5tY25JbWFnZUNhcmRUb3BJbWFnZUNvbnRlbnQsLm1jbkNhcHRpb25Cb3R0b21Db250ZW50Omxhc3QtY2hpbGQgLm1jbkNhcHRpb25Cb3R0b21JbWFnZUNvbnRlbnQsLm1jbkNhcHRpb25CbG9ja0lubmVyIC5tY25DYXB0aW9uVG9wQ29udGVudDpsYXN0LWNoaWxkIC5tY25UZXh0Q29udGVudHsKCQkJcGFkZGluZy10b3A6MThweCAhaW1wb3J0YW50OwoJCX0KCn0JQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCl7CgkJLm1jbkltYWdlQ2FyZEJvdHRvbUltYWdlQ29udGVudHsKCQkJcGFkZGluZy1ib3R0b206OXB4ICFpbXBvcnRhbnQ7CgkJfQoKfQlAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KXsKCQkubWNuSW1hZ2VHcm91cEJsb2NrSW5uZXJ7CgkJCXBhZGRpbmctdG9wOjAgIWltcG9ydGFudDsKCQkJcGFkZGluZy1ib3R0b206MCAhaW1wb3J0YW50OwoJCX0KCn0JQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCl7CgkJLm1jbkltYWdlR3JvdXBCbG9ja091dGVyewoJCQlwYWRkaW5nLXRvcDo5cHggIWltcG9ydGFudDsKCQkJcGFkZGluZy1ib3R0b206OXB4ICFpbXBvcnRhbnQ7CgkJfQoKfQlAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KXsKCQkubWNuVGV4dENvbnRlbnQsLm1jbkJveGVkVGV4dENvbnRlbnRDb2x1bW57CgkJCXBhZGRpbmctcmlnaHQ6MThweCAhaW1wb3J0YW50OwoJCQlwYWRkaW5nLWxlZnQ6MThweCAhaW1wb3J0YW50OwoJCX0KCn0JQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCl7CgkJLm1jbkltYWdlQ2FyZExlZnRJbWFnZUNvbnRlbnQsLm1jbkltYWdlQ2FyZFJpZ2h0SW1hZ2VDb250ZW50ewoJCQlwYWRkaW5nLXJpZ2h0OjE4cHggIWltcG9ydGFudDsKCQkJcGFkZGluZy1ib3R0b206MCAhaW1wb3J0YW50OwoJCQlwYWRkaW5nLWxlZnQ6MThweCAhaW1wb3J0YW50OwoJCX0KCn0JQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCl7CgkJLm1jcHJldmlldy1pbWFnZS11cGxvYWRlcnsKCQkJZGlzcGxheTpub25lICFpbXBvcnRhbnQ7CgkJCXdpZHRoOjEwMCUgIWltcG9ydGFudDsKCQl9Cgp9CUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpewoJLyoKCUB0YWIgTW9iaWxlIFN0eWxlcwoJQHNlY3Rpb24gSGVhZGluZyAxCglAdGlwIE1ha2UgdGhlIGZpcnN0LWxldmVsIGhlYWRpbmdzIGxhcmdlciBpbiBzaXplIGZvciBiZXR0ZXIgcmVhZGFiaWxpdHkgb24gc21hbGwgc2NyZWVucy4KCSovCgkJaDF7CgkJCS8qQGVkaXRhYmxlKi9mb250LXNpemU6MzBweCAhaW1wb3J0YW50OwoJCQkvKkBlZGl0YWJsZSovbGluZS1oZWlnaHQ6MTI1JSAhaW1wb3J0YW50OwoJCX0KCn0JQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCl7CgkvKgoJQHRhYiBNb2JpbGUgU3R5bGVzCglAc2VjdGlvbiBIZWFkaW5nIDIKCUB0aXAgTWFrZSB0aGUgc2Vjb25kLWxldmVsIGhlYWRpbmdzIGxhcmdlciBpbiBzaXplIGZvciBiZXR0ZXIgcmVhZGFiaWxpdHkgb24gc21hbGwgc2NyZWVucy4KCSovCgkJaDJ7CgkJCS8qQGVkaXRhYmxlKi9mb250LXNpemU6MjZweCAhaW1wb3J0YW50OwoJCQkvKkBlZGl0YWJsZSovbGluZS1oZWlnaHQ6MTI1JSAhaW1wb3J0YW50OwoJCX0KCn0JQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCl7CgkvKgoJQHRhYiBNb2JpbGUgU3R5bGVzCglAc2VjdGlvbiBIZWFkaW5nIDMKCUB0aXAgTWFrZSB0aGUgdGhpcmQtbGV2ZWwgaGVhZGluZ3MgbGFyZ2VyIGluIHNpemUgZm9yIGJldHRlciByZWFkYWJpbGl0eSBvbiBzbWFsbCBzY3JlZW5zLgoJKi8KCQloM3sKCQkJLypAZWRpdGFibGUqL2ZvbnQtc2l6ZToyMHB4ICFpbXBvcnRhbnQ7CgkJCS8qQGVkaXRhYmxlKi9saW5lLWhlaWdodDoxNTAlICFpbXBvcnRhbnQ7CgkJfQoKfQlAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KXsKCS8qCglAdGFiIE1vYmlsZSBTdHlsZXMKCUBzZWN0aW9uIEhlYWRpbmcgNAoJQHRpcCBNYWtlIHRoZSBmb3VydGgtbGV2ZWwgaGVhZGluZ3MgbGFyZ2VyIGluIHNpemUgZm9yIGJldHRlciByZWFkYWJpbGl0eSBvbiBzbWFsbCBzY3JlZW5zLgoJKi8KCQloNHsKCQkJLypAZWRpdGFibGUqL2ZvbnQtc2l6ZToxOHB4ICFpbXBvcnRhbnQ7CgkJCS8qQGVkaXRhYmxlKi9saW5lLWhlaWdodDoxNTAlICFpbXBvcnRhbnQ7CgkJfQoKfQlAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KXsKCS8qCglAdGFiIE1vYmlsZSBTdHlsZXMKCUBzZWN0aW9uIEJveGVkIFRleHQKCUB0aXAgTWFrZSB0aGUgYm94ZWQgdGV4dCBsYXJnZXIgaW4gc2l6ZSBmb3IgYmV0dGVyIHJlYWRhYmlsaXR5IG9uIHNtYWxsIHNjcmVlbnMuIFdlIHJlY29tbWVuZCBhIGZvbnQgc2l6ZSBvZiBhdCBsZWFzdCAxNnB4LgoJKi8KCQkubWNuQm94ZWRUZXh0Q29udGVudENvbnRhaW5lciAubWNuVGV4dENvbnRlbnQsLm1jbkJveGVkVGV4dENvbnRlbnRDb250YWluZXIgLm1jblRleHRDb250ZW50IHB7CgkJCS8qQGVkaXRhYmxlKi9mb250LXNpemU6MTRweCAhaW1wb3J0YW50OwoJCQkvKkBlZGl0YWJsZSovbGluZS1oZWlnaHQ6MTUwJSAhaW1wb3J0YW50OwoJCX0KCn0JQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCl7CgkvKgoJQHRhYiBNb2JpbGUgU3R5bGVzCglAc2VjdGlvbiBIZWFkZXIgVGV4dAoJQHRpcCBNYWtlIHRoZSBoZWFkZXIgdGV4dCBsYXJnZXIgaW4gc2l6ZSBmb3IgYmV0dGVyIHJlYWRhYmlsaXR5IG9uIHNtYWxsIHNjcmVlbnMuCgkqLwoJCS5oZWFkZXJDb250YWluZXIgLm1jblRleHRDb250ZW50LC5oZWFkZXJDb250YWluZXIgLm1jblRleHRDb250ZW50IHB7CgkJCS8qQGVkaXRhYmxlKi9mb250LXNpemU6MTZweCAhaW1wb3J0YW50OwoJCQkvKkBlZGl0YWJsZSovbGluZS1oZWlnaHQ6MTUwJSAhaW1wb3J0YW50OwoJCX0KCn0JQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCl7CgkvKgoJQHRhYiBNb2JpbGUgU3R5bGVzCglAc2VjdGlvbiBCb2R5IFRleHQKCUB0aXAgTWFrZSB0aGUgYm9keSB0ZXh0IGxhcmdlciBpbiBzaXplIGZvciBiZXR0ZXIgcmVhZGFiaWxpdHkgb24gc21hbGwgc2NyZWVucy4gV2UgcmVjb21tZW5kIGEgZm9udCBzaXplIG9mIGF0IGxlYXN0IDE2cHguCgkqLwoJCS5ib2R5Q29udGFpbmVyIC5tY25UZXh0Q29udGVudCwuYm9keUNvbnRhaW5lciAubWNuVGV4dENvbnRlbnQgcHsKCQkJLypAZWRpdGFibGUqL2ZvbnQtc2l6ZToxNnB4ICFpbXBvcnRhbnQ7CgkJCS8qQGVkaXRhYmxlKi9saW5lLWhlaWdodDoxNTAlICFpbXBvcnRhbnQ7CgkJfQoKfQlAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KXsKCS8qCglAdGFiIE1vYmlsZSBTdHlsZXMKCUBzZWN0aW9uIEZvb3RlciBUZXh0CglAdGlwIE1ha2UgdGhlIGZvb3RlciBjb250ZW50IHRleHQgbGFyZ2VyIGluIHNpemUgZm9yIGJldHRlciByZWFkYWJpbGl0eSBvbiBzbWFsbCBzY3JlZW5zLgoJKi8KCQkuZm9vdGVyQ29udGFpbmVyIC5tY25UZXh0Q29udGVudCwuZm9vdGVyQ29udGFpbmVyIC5tY25UZXh0Q29udGVudCBwewoJCQkvKkBlZGl0YWJsZSovZm9udC1zaXplOjE0cHggIWltcG9ydGFudDsKCQkJLypAZWRpdGFibGUqL2xpbmUtaGVpZ2h0OjE1MCUgIWltcG9ydGFudDsKCQl9Cgp9PC9zdHlsZT48L2hlYWQ+CiAgICA8Ym9keT4KCQk8IS0tKnxJRjpNQ19QUkVWSUVXX1RFWFR8Ki0tPgoJCTwhLS1baWYgIWd0ZSBtc28gOV0+PCEtLS0tPjxzcGFuIGNsYXNzPSJtY25QcmV2aWV3VGV4dCIgc3R5bGU9ImRpc3BsYXk6bm9uZTsgZm9udC1zaXplOjBweDsgbGluZS1oZWlnaHQ6MHB4OyBtYXgtaGVpZ2h0OjBweDsgbWF4LXdpZHRoOjBweDsgb3BhY2l0eTowOyBvdmVyZmxvdzpoaWRkZW47IHZpc2liaWxpdHk6aGlkZGVuOyBtc28taGlkZTphbGw7Ij48L3NwYW4+PCEtLTwhW2VuZGlmXS0tPgoJCTwhLS0qfEVORDpJRnwqLS0+CiAgICAgICAgPGNlbnRlcj4KICAgICAgICAgICAgPHRhYmxlIGFsaWduPSJjZW50ZXIiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBoZWlnaHQ9IjEwMCUiIHdpZHRoPSIxMDAlIiBpZD0iYm9keVRhYmxlIj4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249ImNlbnRlciIgdmFsaWduPSJ0b3AiIGlkPSJib2R5Q2VsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gQkVHSU4gVEVNUExBVEUgLy8gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjEwMCUiPgoJCQkJCQkJPHRyPgoJCQkJCQkJCTx0ZCBhbGlnbj0iY2VudGVyIiB2YWxpZ249InRvcCIgaWQ9InRlbXBsYXRlSGVhZGVyIiBkYXRhLXRlbXBsYXRlLWNvbnRhaW5lcj4KCQkJCQkJCQkJPCEtLVtpZiAoZ3RlIG1zbyA5KXwoSUUpXT4KCQkJCQkJCQkJPHRhYmxlIGFsaWduPSJjZW50ZXIiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIwIiB3aWR0aD0iNjAwIiBzdHlsZT0id2lkdGg6NjAwcHg7Ij4KCQkJCQkJCQkJPHRyPgoJCQkJCQkJCQk8dGQgYWxpZ249ImNlbnRlciIgdmFsaWduPSJ0b3AiIHdpZHRoPSI2MDAiIHN0eWxlPSJ3aWR0aDo2MDBweDsiPgoJCQkJCQkJCQk8IVtlbmRpZl0tLT4KCQkJCQkJCQkJPHRhYmxlIGFsaWduPSJjZW50ZXIiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiB3aWR0aD0iMTAwJSIgY2xhc3M9InRlbXBsYXRlQ29udGFpbmVyIj4KCQkJCQkJCQkJCTx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAJCQk8dGQgdmFsaWduPSJ0b3AiIGNsYXNzPSJoZWFkZXJDb250YWluZXIiPjx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjEwMCUiIGNsYXNzPSJtY25JbWFnZUJsb2NrIiBzdHlsZT0ibWluLXdpZHRoOjEwMCU7Ij4KICAgIDx0Ym9keSBjbGFzcz0ibWNuSW1hZ2VCbG9ja091dGVyIj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIHZhbGlnbj0idG9wIiBzdHlsZT0icGFkZGluZzo5cHgiIGNsYXNzPSJtY25JbWFnZUJsb2NrSW5uZXIiPgogICAgICAgICAgICAgICAgICAgIDx0YWJsZSBhbGlnbj0ibGVmdCIgd2lkdGg9IjEwMCUiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBjbGFzcz0ibWNuSW1hZ2VDb250ZW50Q29udGFpbmVyIiBzdHlsZT0ibWluLXdpZHRoOjEwMCU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pjx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWNuSW1hZ2VDb250ZW50IiB2YWxpZ249InRvcCIgc3R5bGU9InBhZGRpbmctcmlnaHQ6IDlweDsgcGFkZGluZy1sZWZ0OiA5cHg7IHBhZGRpbmctdG9wOiAwOyBwYWRkaW5nLWJvdHRvbTogMDsgdGV4dC1hbGlnbjpjZW50ZXI7Ij4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vY29udGFpbmVydW0uY29tLz91dG1fc291cmNlPW5ld3NsZXR0ZXImYW1wO3V0bV9tZWRpdW09ZW1haWwmYW1wO3V0bV9jYW1wYWlnbj0zX3Jlc2V0X3B3ZF9uZXdfdjEiIHRpdGxlPSIiIGNsYXNzPSIiIHRhcmdldD0iX2JsYW5rIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgYWxpZ249ImNlbnRlciIgYWx0PSIiIHNyYz0iaHR0cHM6Ly9nYWxsZXJ5Lm1haWxjaGltcC5jb20vOTg5Nzc2MTEyYjQ4MzMyOTc0NDE5OWNmOS9pbWFnZXMvYjdmMWJlYjAtMzA5MS00NmE2LTgyNTgtMzhhMzIyN2ZjYTBjLnBuZyIgd2lkdGg9IjMyMCIgc3R5bGU9Im1heC13aWR0aDozMjBweDsgcGFkZGluZy1ib3R0b206IDA7IGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50OyB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tOyIgY2xhc3M9Im1jbkltYWdlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT48L3RhYmxlPgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgIDwvdGJvZHk+CjwvdGFibGU+PHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiB3aWR0aD0iMTAwJSIgY2xhc3M9Im1jblRleHRCbG9jayIgc3R5bGU9Im1pbi13aWR0aDoxMDAlOyI+CiAgICA8dGJvZHkgY2xhc3M9Im1jblRleHRCbG9ja091dGVyIj4KICAgICAgICA8dHI+CiAgICAgICAgICAgIDx0ZCB2YWxpZ249InRvcCIgY2xhc3M9Im1jblRleHRCbG9ja0lubmVyIiBzdHlsZT0icGFkZGluZy10b3A6OXB4OyI+CiAgICAgICAgICAgICAgCTwhLS1baWYgbXNvXT4KCQkJCTx0YWJsZSBhbGlnbj0ibGVmdCIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiIHdpZHRoPSIxMDAlIiBzdHlsZT0id2lkdGg6MTAwJTsiPgoJCQkJPHRyPgoJCQkJPCFbZW5kaWZdLS0+CgoJCQkJPCEtLVtpZiBtc29dPgoJCQkJPHRkIHZhbGlnbj0idG9wIiB3aWR0aD0iNjAwIiBzdHlsZT0id2lkdGg6NjAwcHg7Ij4KCQkJCTwhW2VuZGlmXS0tPgogICAgICAgICAgICAgICAgPHRhYmxlIGFsaWduPSJsZWZ0IiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9Im1heC13aWR0aDoxMDAlOyBtaW4td2lkdGg6MTAwJTsiIHdpZHRoPSIxMDAlIiBjbGFzcz0ibWNuVGV4dENvbnRlbnRDb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgIDx0Ym9keT48dHI+CgogICAgICAgICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiIGNsYXNzPSJtY25UZXh0Q29udGVudCIgc3R5bGU9InBhZGRpbmctdG9wOjA7IHBhZGRpbmctcmlnaHQ6MThweDsgcGFkZGluZy1ib3R0b206OXB4OyBwYWRkaW5nLWxlZnQ6MThweDsiPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDwvdGJvZHk+PC90YWJsZT4KCQkJCTwhLS1baWYgbXNvXT4KCQkJCTwvdGQ+CgkJCQk8IVtlbmRpZl0tLT4KCgkJCQk8IS0tW2lmIG1zb10+CgkJCQk8L3RyPgoJCQkJPC90YWJsZT4KCQkJCTwhW2VuZGlmXS0tPgogICAgICAgICAgICA8L3RkPgogICAgICAgIDwvdHI+CiAgICA8L3Rib2R5Pgo8L3RhYmxlPjwvdGQ+CgkJCQkJCQkJCQk8L3RyPgoJCQkJCQkJCQk8L3RhYmxlPgoJCQkJCQkJCQk8IS0tW2lmIChndGUgbXNvIDkpfChJRSldPgoJCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQk8L3RyPgoJCQkJCQkJCQk8L3RhYmxlPgoJCQkJCQkJCQk8IVtlbmRpZl0tLT4KCQkJCQkJCQk8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KCQkJCQkJCTx0cj4KCQkJCQkJCQk8dGQgYWxpZ249ImNlbnRlciIgdmFsaWduPSJ0b3AiIGlkPSJ0ZW1wbGF0ZUJvZHkiIGRhdGEtdGVtcGxhdGUtY29udGFpbmVyPgoJCQkJCQkJCQk8IS0tW2lmIChndGUgbXNvIDkpfChJRSldPgoJCQkJCQkJCQk8dGFibGUgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiIHdpZHRoPSI2MDAiIHN0eWxlPSJ3aWR0aDo2MDBweDsiPgoJCQkJCQkJCQk8dHI+CgkJCQkJCQkJCTx0ZCBhbGlnbj0iY2VudGVyIiB2YWxpZ249InRvcCIgd2lkdGg9IjYwMCIgc3R5bGU9IndpZHRoOjYwMHB4OyI+CgkJCQkJCQkJCTwhW2VuZGlmXS0tPgoJCQkJCQkJCQk8dGFibGUgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHdpZHRoPSIxMDAlIiBjbGFzcz0idGVtcGxhdGVDb250YWluZXIiPgoJCQkJCQkJCQkJPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAkJCTx0ZCB2YWxpZ249InRvcCIgY2xhc3M9ImJvZHlDb250YWluZXIiPjx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjEwMCUiIGNsYXNzPSJtY25UZXh0QmxvY2siIHN0eWxlPSJtaW4td2lkdGg6MTAwJTsiPgogICAgPHRib2R5IGNsYXNzPSJtY25UZXh0QmxvY2tPdXRlciI+CiAgICAgICAgPHRyPgogICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiIGNsYXNzPSJtY25UZXh0QmxvY2tJbm5lciIgc3R5bGU9InBhZGRpbmctdG9wOjlweDsiPgogICAgICAgICAgICAgIAk8IS0tW2lmIG1zb10+CgkJCQk8dGFibGUgYWxpZ249ImxlZnQiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIwIiB3aWR0aD0iMTAwJSIgc3R5bGU9IndpZHRoOjEwMCU7Ij4KCQkJCTx0cj4KCQkJCTwhW2VuZGlmXS0tPgoKCQkJCTwhLS1baWYgbXNvXT4KCQkJCTx0ZCB2YWxpZ249InRvcCIgd2lkdGg9IjYwMCIgc3R5bGU9IndpZHRoOjYwMHB4OyI+CgkJCQk8IVtlbmRpZl0tLT4KICAgICAgICAgICAgICAgIDx0YWJsZSBhbGlnbj0ibGVmdCIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJtYXgtd2lkdGg6MTAwJTsgbWluLXdpZHRoOjEwMCU7IiB3aWR0aD0iMTAwJSIgY2xhc3M9Im1jblRleHRDb250ZW50Q29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICA8dGJvZHk+PHRyPgoKICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHZhbGlnbj0idG9wIiBjbGFzcz0ibWNuVGV4dENvbnRlbnQiIHN0eWxlPSJwYWRkaW5nLXRvcDowOyBwYWRkaW5nLXJpZ2h0OjE4cHg7IHBhZGRpbmctYm90dG9tOjlweDsgcGFkZGluZy1sZWZ0OjE4cHg7Ij4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiPlBhc3N3b3JkIHJlc2V0PC9oMz4KCjxocj4KPHA+Jm5ic3A7PC9wPgoKPHAgZGlyPSJsdHIiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6MThweCI+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5Om9wZW4gc2FucyxoZWx2ZXRpY2EgbmV1ZSxoZWx2ZXRpY2EsYXJpYWwsc2Fucy1zZXJpZiI+WW91IGhhdmUgc3VibWl0dGVkIGEgcGFzc3dvcmQgcmVzZXQgcmVxdWVzdC48L3NwYW4+PC9zcGFuPjwvcD4KCjxwPjxzcGFuIHN0eWxlPSJmb250LXNpemU6MThweCI+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5Om9wZW4gc2FucyxoZWx2ZXRpY2EgbmV1ZSxoZWx2ZXRpY2EsYXJpYWwsc2Fucy1zZXJpZiI+VG8gcmVzZXQgeW91ciBwYXNzd29yZCwgcGxlYXNlIGZvbGxvdyB0aGUgPGEgaHJlZj0iaHR0cDovL2xvY2FsLmNvbnRhaW5lcnVtLmlvL1JlY292ZXJ5UGFzc3dvcmQ/aGFzaFBhcmFtPXt7LlRPS0VOfX0iIHRhcmdldD0iX2JsYW5rIj5saW5rPC9hPiBvciBqdXN0IGNsaWNrIHRoZSBSZXNldCBwYXNzd29yZCBidXR0b24gYmVsb3c6PC9zcGFuPjwvc3Bhbj48L3A+CgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3Rib2R5PjwvdGFibGU+CgkJCQk8IS0tW2lmIG1zb10+CgkJCQk8L3RkPgoJCQkJPCFbZW5kaWZdLS0+CgoJCQkJPCEtLVtpZiBtc29dPgoJCQkJPC90cj4KCQkJCTwvdGFibGU+CgkJCQk8IVtlbmRpZl0tLT4KICAgICAgICAgICAgPC90ZD4KICAgICAgICA8L3RyPgogICAgPC90Ym9keT4KPC90YWJsZT48dGFibGUgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHdpZHRoPSIxMDAlIiBjbGFzcz0ibWNuQnV0dG9uQmxvY2siIHN0eWxlPSJtaW4td2lkdGg6MTAwJTsiPgogICAgPHRib2R5IGNsYXNzPSJtY25CdXR0b25CbG9ja091dGVyIj4KICAgICAgICA8dHI+CiAgICAgICAgICAgIDx0ZCBzdHlsZT0icGFkZGluZy10b3A6MDsgcGFkZGluZy1yaWdodDoxOHB4OyBwYWRkaW5nLWJvdHRvbToxOHB4OyBwYWRkaW5nLWxlZnQ6MThweDsiIHZhbGlnbj0idG9wIiBhbGlnbj0iY2VudGVyIiBjbGFzcz0ibWNuQnV0dG9uQmxvY2tJbm5lciI+CiAgICAgICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIGNsYXNzPSJtY25CdXR0b25Db250ZW50Q29udGFpbmVyIiBzdHlsZT0iYm9yZGVyLWNvbGxhcHNlOiBzZXBhcmF0ZSAhaW1wb3J0YW50O2JvcmRlci10b3AtbGVmdC1yYWRpdXM6IDNweDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogM3B4O2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAzcHg7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogM3B4O2JhY2tncm91bmQtY29sb3I6ICNGRkNCMzE7Ij4KICAgICAgICAgICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIiB2YWxpZ249Im1pZGRsZSIgY2xhc3M9Im1jbkJ1dHRvbkNvbnRlbnQiIHN0eWxlPSJmb250LWZhbWlseTogQXJpYWw7IGZvbnQtc2l6ZTogMThweDsgcGFkZGluZzogMTVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtY25CdXR0b24gIiB0aXRsZT0iUmVzZXQgcGFzc3dvcmQiIGhyZWY9Imh0dHA6Ly9sb2NhbC5jb250YWluZXJ1bS5pby9SZWNvdmVyeVBhc3N3b3JkP2hhc2hQYXJhbT17ey5UT0tFTn19IiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImZvbnQtd2VpZ2h0OiBib2xkO2xldHRlci1zcGFjaW5nOiBub3JtYWw7bGluZS1oZWlnaHQ6IDEwMCU7dGV4dC1hbGlnbjogY2VudGVyO3RleHQtZGVjb3JhdGlvbjogbm9uZTtjb2xvcjogIzAwMDAwMDsiPlJlc2V0IHBhc3N3b3JkPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC90ZD4KICAgICAgICA8L3RyPgogICAgPC90Ym9keT4KPC90YWJsZT48dGFibGUgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHdpZHRoPSIxMDAlIiBjbGFzcz0ibWNuRGl2aWRlckJsb2NrIiBzdHlsZT0ibWluLXdpZHRoOjEwMCU7Ij4KICAgIDx0Ym9keSBjbGFzcz0ibWNuRGl2aWRlckJsb2NrT3V0ZXIiPgogICAgICAgIDx0cj4KICAgICAgICAgICAgPHRkIGNsYXNzPSJtY25EaXZpZGVyQmxvY2tJbm5lciIgc3R5bGU9Im1pbi13aWR0aDoxMDAlOyBwYWRkaW5nOjE4cHg7Ij4KICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0ibWNuRGl2aWRlckNvbnRlbnQiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiB3aWR0aD0iMTAwJSIgc3R5bGU9Im1pbi13aWR0aDoxMDAlOyI+CiAgICAgICAgICAgICAgICAgICAgPHRib2R5Pjx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3Rib2R5PjwvdGFibGU+CjwhLS0KICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWNuRGl2aWRlckJsb2NrSW5uZXIiIHN0eWxlPSJwYWRkaW5nOiAxOHB4OyI+CiAgICAgICAgICAgICAgICA8aHIgY2xhc3M9Im1jbkRpdmlkZXJDb250ZW50IiBzdHlsZT0iYm9yZGVyLWJvdHRvbS1jb2xvcjpub25lOyBib3JkZXItbGVmdC1jb2xvcjpub25lOyBib3JkZXItcmlnaHQtY29sb3I6bm9uZTsgYm9yZGVyLWJvdHRvbS13aWR0aDowOyBib3JkZXItbGVmdC13aWR0aDowOyBib3JkZXItcmlnaHQtd2lkdGg6MDsgbWFyZ2luLXRvcDowOyBtYXJnaW4tcmlnaHQ6MDsgbWFyZ2luLWJvdHRvbTowOyBtYXJnaW4tbGVmdDowOyIgLz4KLS0+CiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgPC90cj4KICAgIDwvdGJvZHk+CjwvdGFibGU+PC90ZD4KCQkJCQkJCQkJCTwvdHI+CgkJCQkJCQkJCTwvdGFibGU+CgkJCQkJCQkJCTwhLS1baWYgKGd0ZSBtc28gOSl8KElFKV0+CgkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCTwvdHI+CgkJCQkJCQkJCTwvdGFibGU+CgkJCQkJCQkJCTwhW2VuZGlmXS0tPgoJCQkJCQkJCTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgoJCQkJCQkJCTx0ZCBhbGlnbj0iY2VudGVyIiB2YWxpZ249InRvcCIgaWQ9InRlbXBsYXRlRm9vdGVyIiBkYXRhLXRlbXBsYXRlLWNvbnRhaW5lcj4KCQkJCQkJCQkJPCEtLVtpZiAoZ3RlIG1zbyA5KXwoSUUpXT4KCQkJCQkJCQkJPHRhYmxlIGFsaWduPSJjZW50ZXIiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIwIiB3aWR0aD0iNjAwIiBzdHlsZT0id2lkdGg6NjAwcHg7Ij4KCQkJCQkJCQkJPHRyPgoJCQkJCQkJCQk8dGQgYWxpZ249ImNlbnRlciIgdmFsaWduPSJ0b3AiIHdpZHRoPSI2MDAiIHN0eWxlPSJ3aWR0aDo2MDBweDsiPgoJCQkJCQkJCQk8IVtlbmRpZl0tLT4KCQkJCQkJCQkJPHRhYmxlIGFsaWduPSJjZW50ZXIiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiB3aWR0aD0iMTAwJSIgY2xhc3M9InRlbXBsYXRlQ29udGFpbmVyIj4KCQkJCQkJCQkJCTx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAJCQk8dGQgdmFsaWduPSJ0b3AiIGNsYXNzPSJmb290ZXJDb250YWluZXIiPjx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjEwMCUiIGNsYXNzPSJtY25Gb2xsb3dCbG9jayIgc3R5bGU9Im1pbi13aWR0aDoxMDAlOyI+CiAgICA8dGJvZHkgY2xhc3M9Im1jbkZvbGxvd0Jsb2NrT3V0ZXIiPgogICAgICAgIDx0cj4KICAgICAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIHZhbGlnbj0idG9wIiBzdHlsZT0icGFkZGluZzo5cHgiIGNsYXNzPSJtY25Gb2xsb3dCbG9ja0lubmVyIj4KICAgICAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjEwMCUiIGNsYXNzPSJtY25Gb2xsb3dDb250ZW50Q29udGFpbmVyIiBzdHlsZT0ibWluLXdpZHRoOjEwMCU7Ij4KICAgIDx0Ym9keT48dHI+CiAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJwYWRkaW5nLWxlZnQ6OXB4O3BhZGRpbmctcmlnaHQ6OXB4OyI+CiAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjEwMCUiIHN0eWxlPSJtaW4td2lkdGg6MTAwJTsiIGNsYXNzPSJtY25Gb2xsb3dDb250ZW50Ij4KICAgICAgICAgICAgICAgIDx0Ym9keT48dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIHZhbGlnbj0idG9wIiBzdHlsZT0icGFkZGluZy10b3A6OXB4OyBwYWRkaW5nLXJpZ2h0OjlweDsgcGFkZGluZy1sZWZ0OjlweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pjx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249ImNlbnRlciIgdmFsaWduPSJ0b3AiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tW2lmIG1zb10+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBhbGlnbj0iY2VudGVyIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCFbZW5kaWZdLS0+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiBtc29dPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIHZhbGlnbj0idG9wIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhW2VuZGlmXS0tPgoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGFsaWduPSJsZWZ0IiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImRpc3BsYXk6aW5saW5lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT48dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiIHN0eWxlPSJwYWRkaW5nLXJpZ2h0OjEwcHg7IHBhZGRpbmctYm90dG9tOjlweDsiIGNsYXNzPSJtY25Gb2xsb3dDb250ZW50SXRlbUNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiB3aWR0aD0iMTAwJSIgY2xhc3M9Im1jbkZvbGxvd0NvbnRlbnRJdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pjx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0ibGVmdCIgdmFsaWduPSJtaWRkbGUiIHN0eWxlPSJwYWRkaW5nLXRvcDo1cHg7IHBhZGRpbmctcmlnaHQ6MTBweDsgcGFkZGluZy1ib3R0b206NXB4OyBwYWRkaW5nLWxlZnQ6OXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGFsaWduPSJsZWZ0IiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT48dHI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIiB2YWxpZ249Im1pZGRsZSIgd2lkdGg9IjI0IiBjbGFzcz0ibWNuRm9sbG93SWNvbkNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL21lZGl1bS5jb20vQGNvbnRhaW5lcnVtIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9Imh0dHBzOi8vY2RuLWltYWdlcy5tYWlsY2hpbXAuY29tL2ljb25zL3NvY2lhbC1ibG9jay12Mi9jb2xvci1saW5rLTQ4LnBuZyIgc3R5bGU9ImRpc3BsYXk6YmxvY2s7IiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIGNsYXNzPSIiPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT48L3RhYmxlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PjwvdGFibGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+PC90YWJsZT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tW2lmIG1zb10+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCFbZW5kaWZdLS0+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiBtc29dPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIHZhbGlnbj0idG9wIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhW2VuZGlmXS0tPgoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGFsaWduPSJsZWZ0IiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImRpc3BsYXk6aW5saW5lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT48dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiIHN0eWxlPSJwYWRkaW5nLXJpZ2h0OjEwcHg7IHBhZGRpbmctYm90dG9tOjlweDsiIGNsYXNzPSJtY25Gb2xsb3dDb250ZW50SXRlbUNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiB3aWR0aD0iMTAwJSIgY2xhc3M9Im1jbkZvbGxvd0NvbnRlbnRJdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pjx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0ibGVmdCIgdmFsaWduPSJtaWRkbGUiIHN0eWxlPSJwYWRkaW5nLXRvcDo1cHg7IHBhZGRpbmctcmlnaHQ6MTBweDsgcGFkZGluZy1ib3R0b206NXB4OyBwYWRkaW5nLWxlZnQ6OXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGFsaWduPSJsZWZ0IiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT48dHI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIiB2YWxpZ249Im1pZGRsZSIgd2lkdGg9IjI0IiBjbGFzcz0ibWNuRm9sbG93SWNvbkNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vY29udGFpbmVydW0vIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9Imh0dHBzOi8vY2RuLWltYWdlcy5tYWlsY2hpbXAuY29tL2ljb25zL3NvY2lhbC1ibG9jay12Mi9jb2xvci1naXRodWItNDgucG5nIiBzdHlsZT0iZGlzcGxheTpibG9jazsiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIgY2xhc3M9IiI+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PjwvdGFibGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+PC90YWJsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT48L3RhYmxlPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvXT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IVtlbmRpZl0tLT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tW2lmIG1zb10+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249ImNlbnRlciIgdmFsaWduPSJ0b3AiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCFbZW5kaWZdLS0+CgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYWxpZ249ImxlZnQiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZGlzcGxheTppbmxpbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pjx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCB2YWxpZ249InRvcCIgc3R5bGU9InBhZGRpbmctcmlnaHQ6MTBweDsgcGFkZGluZy1ib3R0b206OXB4OyIgY2xhc3M9Im1jbkZvbGxvd0NvbnRlbnRJdGVtQ29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHdpZHRoPSIxMDAlIiBjbGFzcz0ibWNuRm9sbG93Q29udGVudEl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+PHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJsZWZ0IiB2YWxpZ249Im1pZGRsZSIgc3R5bGU9InBhZGRpbmctdG9wOjVweDsgcGFkZGluZy1yaWdodDoxMHB4OyBwYWRkaW5nLWJvdHRvbTo1cHg7IHBhZGRpbmctbGVmdDo5cHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYWxpZ249ImxlZnQiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiB3aWR0aD0iIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pjx0cj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIHZhbGlnbj0ibWlkZGxlIiB3aWR0aD0iMjQiIGNsYXNzPSJtY25Gb2xsb3dJY29uQ29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vQ29udGFpbmVydW1jb20iIHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0iaHR0cHM6Ly9jZG4taW1hZ2VzLm1haWxjaGltcC5jb20vaWNvbnMvc29jaWFsLWJsb2NrLXYyL2NvbG9yLXR3aXR0ZXItNDgucG5nIiBzdHlsZT0iZGlzcGxheTpibG9jazsiIGhlaWdodD0iMjQiIHdpZHRoPSIyNCIgY2xhc3M9IiI+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PjwvdGFibGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+PC90YWJsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT48L3RhYmxlPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvXT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IVtlbmRpZl0tLT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tW2lmIG1zb10+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249ImNlbnRlciIgdmFsaWduPSJ0b3AiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCFbZW5kaWZdLS0+CgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYWxpZ249ImxlZnQiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0iZGlzcGxheTppbmxpbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pjx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCB2YWxpZ249InRvcCIgc3R5bGU9InBhZGRpbmctcmlnaHQ6MTBweDsgcGFkZGluZy1ib3R0b206OXB4OyIgY2xhc3M9Im1jbkZvbGxvd0NvbnRlbnRJdGVtQ29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHdpZHRoPSIxMDAlIiBjbGFzcz0ibWNuRm9sbG93Q29udGVudEl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+PHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJsZWZ0IiB2YWxpZ249Im1pZGRsZSIgc3R5bGU9InBhZGRpbmctdG9wOjVweDsgcGFkZGluZy1yaWdodDoxMHB4OyBwYWRkaW5nLWJvdHRvbTo1cHg7IHBhZGRpbmctbGVmdDo5cHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYWxpZ249ImxlZnQiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiB3aWR0aD0iIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pjx0cj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIHZhbGlnbj0ibWlkZGxlIiB3aWR0aD0iMjQiIGNsYXNzPSJtY25Gb2xsb3dJY29uQ29udGVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9jb250YWluZXJ1bS8/cmVmPWF5bXRfaG9tZXBhZ2VfcGFuZWwiIHRhcmdldD0iX2JsYW5rIj48aW1nIHNyYz0iaHR0cHM6Ly9jZG4taW1hZ2VzLm1haWxjaGltcC5jb20vaWNvbnMvc29jaWFsLWJsb2NrLXYyL2NvbG9yLWZhY2Vib29rLTQ4LnBuZyIgc3R5bGU9ImRpc3BsYXk6YmxvY2s7IiBoZWlnaHQ9IjI0IiB3aWR0aD0iMjQiIGNsYXNzPSIiPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT48L3RhYmxlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PjwvdGFibGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+PC90YWJsZT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tW2lmIG1zb10+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCFbZW5kaWZdLS0+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiBtc29dPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIHZhbGlnbj0idG9wIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhW2VuZGlmXS0tPgoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGFsaWduPSJsZWZ0IiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9ImRpc3BsYXk6aW5saW5lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT48dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJ0b3AiIHN0eWxlPSJwYWRkaW5nLXJpZ2h0OjA7IHBhZGRpbmctYm90dG9tOjlweDsiIGNsYXNzPSJtY25Gb2xsb3dDb250ZW50SXRlbUNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiB3aWR0aD0iMTAwJSIgY2xhc3M9Im1jbkZvbGxvd0NvbnRlbnRJdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pjx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0ibGVmdCIgdmFsaWduPSJtaWRkbGUiIHN0eWxlPSJwYWRkaW5nLXRvcDo1cHg7IHBhZGRpbmctcmlnaHQ6MTBweDsgcGFkZGluZy1ib3R0b206NXB4OyBwYWRkaW5nLWxlZnQ6OXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGFsaWduPSJsZWZ0IiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT48dHI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIiB2YWxpZ249Im1pZGRsZSIgd2lkdGg9IjI0IiBjbGFzcz0ibWNuRm9sbG93SWNvbkNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS9jaGFubmVsL1VDeUN2MnNueUpON25GLXJ6aEJTSUNRQSIgdGFyZ2V0PSJfYmxhbmsiPjxpbWcgc3JjPSJodHRwczovL2Nkbi1pbWFnZXMubWFpbGNoaW1wLmNvbS9pY29ucy9zb2NpYWwtYmxvY2stdjIvY29sb3IteW91dHViZS00OC5wbmciIHN0eWxlPSJkaXNwbGF5OmJsb2NrOyIgaGVpZ2h0PSIyNCIgd2lkdGg9IjI0IiBjbGFzcz0iIj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+PC90YWJsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT48L3RhYmxlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PjwvdGFibGU+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiBtc29dPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhW2VuZGlmXS0tPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiBtc29dPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IVtlbmRpZl0tLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT48L3RhYmxlPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8L3Rib2R5PjwvdGFibGU+CiAgICAgICAgPC90ZD4KICAgIDwvdHI+CjwvdGJvZHk+PC90YWJsZT4KCiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgPC90cj4KICAgIDwvdGJvZHk+CjwvdGFibGU+PHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiB3aWR0aD0iMTAwJSIgY2xhc3M9Im1jbkRpdmlkZXJCbG9jayIgc3R5bGU9Im1pbi13aWR0aDoxMDAlOyI+CiAgICA8dGJvZHkgY2xhc3M9Im1jbkRpdmlkZXJCbG9ja091dGVyIj4KICAgICAgICA8dHI+CiAgICAgICAgICAgIDx0ZCBjbGFzcz0ibWNuRGl2aWRlckJsb2NrSW5uZXIiIHN0eWxlPSJtaW4td2lkdGg6MTAwJTsgcGFkZGluZzoxOHB4OyI+CiAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9Im1jbkRpdmlkZXJDb250ZW50IiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjEwMCUiIHN0eWxlPSJtaW4td2lkdGg6IDEwMCU7Ym9yZGVyLXRvcDogMnB4IHNvbGlkICM1MDUwNTA7Ij4KICAgICAgICAgICAgICAgICAgICA8dGJvZHk+PHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDwvdGJvZHk+PC90YWJsZT4KPCEtLQogICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJtY25EaXZpZGVyQmxvY2tJbm5lciIgc3R5bGU9InBhZGRpbmc6IDE4cHg7Ij4KICAgICAgICAgICAgICAgIDxociBjbGFzcz0ibWNuRGl2aWRlckNvbnRlbnQiIHN0eWxlPSJib3JkZXItYm90dG9tLWNvbG9yOm5vbmU7IGJvcmRlci1sZWZ0LWNvbG9yOm5vbmU7IGJvcmRlci1yaWdodC1jb2xvcjpub25lOyBib3JkZXItYm90dG9tLXdpZHRoOjA7IGJvcmRlci1sZWZ0LXdpZHRoOjA7IGJvcmRlci1yaWdodC13aWR0aDowOyBtYXJnaW4tdG9wOjA7IG1hcmdpbi1yaWdodDowOyBtYXJnaW4tYm90dG9tOjA7IG1hcmdpbi1sZWZ0OjA7IiAvPgotLT4KICAgICAgICAgICAgPC90ZD4KICAgICAgICA8L3RyPgogICAgPC90Ym9keT4KPC90YWJsZT48dGFibGUgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHdpZHRoPSIxMDAlIiBjbGFzcz0ibWNuVGV4dEJsb2NrIiBzdHlsZT0ibWluLXdpZHRoOjEwMCU7Ij4KICAgIDx0Ym9keSBjbGFzcz0ibWNuVGV4dEJsb2NrT3V0ZXIiPgogICAgICAgIDx0cj4KICAgICAgICAgICAgPHRkIHZhbGlnbj0idG9wIiBjbGFzcz0ibWNuVGV4dEJsb2NrSW5uZXIiIHN0eWxlPSJwYWRkaW5nLXRvcDo5cHg7Ij4KICAgICAgICAgICAgICAJPCEtLVtpZiBtc29dPgoJCQkJPHRhYmxlIGFsaWduPSJsZWZ0IiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCIgd2lkdGg9IjEwMCUiIHN0eWxlPSJ3aWR0aDoxMDAlOyI+CgkJCQk8dHI+CgkJCQk8IVtlbmRpZl0tLT4KCgkJCQk8IS0tW2lmIG1zb10+CgkJCQk8dGQgdmFsaWduPSJ0b3AiIHdpZHRoPSI2MDAiIHN0eWxlPSJ3aWR0aDo2MDBweDsiPgoJCQkJPCFbZW5kaWZdLS0+CiAgICAgICAgICAgICAgICA8dGFibGUgYWxpZ249ImxlZnQiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0ibWF4LXdpZHRoOjEwMCU7IG1pbi13aWR0aDoxMDAlOyIgd2lkdGg9IjEwMCUiIGNsYXNzPSJtY25UZXh0Q29udGVudENvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgPHRib2R5Pjx0cj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCB2YWxpZ249InRvcCIgY2xhc3M9Im1jblRleHRDb250ZW50IiBzdHlsZT0icGFkZGluZy10b3A6MDsgcGFkZGluZy1yaWdodDoxOHB4OyBwYWRkaW5nLWJvdHRvbTo5cHg7IHBhZGRpbmctbGVmdDoxOHB4OyI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgwqkgRXhvbiBMYWIsIDIwMTguIEFsbCByaWdodCByZXNlcnZlZC48YnI+Cjxicj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90Ym9keT48L3RhYmxlPgoJCQkJPCEtLVtpZiBtc29dPgoJCQkJPC90ZD4KCQkJCTwhW2VuZGlmXS0tPgoKCQkJCTwhLS1baWYgbXNvXT4KCQkJCTwvdHI+CgkJCQk8L3RhYmxlPgoJCQkJPCFbZW5kaWZdLS0+CiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgPC90cj4KICAgIDwvdGJvZHk+CjwvdGFibGU+PC90ZD4KCQkJCQkJCQkJCTwvdHI+CgkJCQkJCQkJCTwvdGFibGU+CgkJCQkJCQkJCTwhLS1baWYgKGd0ZSBtc28gOSl8KElFKV0+CgkJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCTwvdHI+CgkJCQkJCQkJCTwvdGFibGU+CgkJCQkJCQkJCTwhW2VuZGlmXS0tPgoJCQkJCQkJCTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIC8vIEVORCBURU1QTEFURSAtLT4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICA8L2NlbnRlcj4KICAgIDwvYm9keT4KPC9odG1sPg=="
	}
]